///////////////////////////////////////////////////////////////////////////////
//
//	Reader.cpp
//
///////////////////////////////////////////////////////////////////////////////
#include "Reader.h"

///////////////////////////////////////////////////////////////////////////////
//
//	Constructor
//
///////////////////////////////////////////////////////////////////////////////
Reader::Reader(sc_module_name zName)
: sc_module(zName)
{
	/*
	
	À compléter
	
	*/
	SC_THREAD(Read);
}

///////////////////////////////////////////////////////////////////////////////
//
//	Destructor
//
///////////////////////////////////////////////////////////////////////////////
Reader::~Reader()
{
	sc_stop();
}

///////////////////////////////////////////////////////////////////////////////
//
//	read
//
///////////////////////////////////////////////////////////////////////////////
void Reader::Read(void)
{
	unsigned int addr = 0;
	unsigned int value = 0;

	while(1) {
		/*
		
		À compléter
		
		*/
		do {
			wait(clk->posedge_event());
		} while (!request.read());

		 addr = address.read();

		 value = dataPortRAM->Read(addr);

		 data.write(value);

		 ack.write(true);

		 wait(clk->posedge_event());

		 ack.write(false);

	}

}
