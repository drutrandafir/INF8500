///////////////////////////////////////////////////////////////////////////////
//
//	Bubble.cpp
//
///////////////////////////////////////////////////////////////////////////////
#include "Bubble.h"


///////////////////////////////////////////////////////////////////////////////
//
//	Constructeur
//
///////////////////////////////////////////////////////////////////////////////
Bubble::Bubble( sc_module_name zName )
: sc_module(zName)
{
	/*
	
	À compléter
	
	*/
}


///////////////////////////////////////////////////////////////////////////////
//
//	Destructeur
//
///////////////////////////////////////////////////////////////////////////////
Bubble::~Bubble()
{
	/*
	
	À compléter
	
	*/
}


///////////////////////////////////////////////////////////////////////////////
//
//	thread
//
///////////////////////////////////////////////////////////////////////////////
void Bubble::thread(void)
{
	/*
	
	À compléter:

	Machine à états. Exemple:
	- demande des données à Reader
	- lecture du nombre d'éléments
	- lecture des données (1 lecture par cycle d'hrologe)
	- Tri: a chaque passage dans l'état on fait un chagement de position si nécessaire. On reste dans l état tant que le tri n'est pas terminé (1 opération par cycle d'hrologe)
	- Affichage
	- Arrêt de la simulations
	
	*/

}
